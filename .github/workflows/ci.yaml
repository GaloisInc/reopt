# This script builds reopt and reopt-vcg and


name: CI

on: [push]
jobs:
  # This task builds the dev image used to build reopt.
  dev-img:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Export DEV_HASH
      run: echo "DEV_HASH=`shasum containers/dev/Dockerfile | cut -d' ' -f1`" >> $GITHUB_ENV
    - name: Cache Developer environment
      id: cache
      uses: actions/cache@v1
      with:
        path: cache
        key: reopt-dev-${{ env.DEV_HASH }}
    - name: Build
      run: docker build -t galoisbinaryanalysis/reopt-dev containers/dev
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Push to Docker hub
      run: |
        echo ${{ secrets.docker_password }} | docker login -u galoisbinaryanalysisbot --password-stdin
        docker push galoisbinaryanalysis/reopt-dev
      if: steps.cache.outputs.cache-hit != 'true'
    - name: Create dummy directory for cache
      run: mkdir -p cache
      if: steps.cache.outputs.cache-hit != 'true'
  # This task builds reopt on the reopt-dev container and
  # generates the reopt artifact with the binary.
  build:
    needs: [dev-img]
    runs-on: ubuntu-20.04
    container: galoisbinaryanalysis/reopt-dev
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set env.home and enc.ghc
      run: |
        echo "home=$HOME" >> $GITHUB_ENV
        echo "ghc=`ghc --version --help | cut -d' ' -f8`" >> $GITHUB_ENV
    - name: Cache cabal files
      uses: actions/cache@v1
      with:
        path: ${{env.home}}/.cabal/store/ghc-${{ env.ghc }}
        # Prefer previous ref
        key: build-cabal-${{ env.ghc }}-${{ github.ref }}
        # otherwise just use most recent build.
        restore-keys: build-cabal-${{ env.ghc }}
    - name: Cache local build files
      uses: actions/cache@v1
      with:
        path: dist-newstyle
        # Prefer previous ref
        key: build-dist-${{ env.ghc }}-${{ github.ref }}
        # otherwise just use most recent build.
        restore-keys: build-dist-${{ env.ghc }}
    - name: Cabal freeze and enable werror.
      run: |
        ln -s cabal.project.freeze.ghc.${{ env.ghc }} cabal.project.freeze
        ln -s cabal.project.werror cabal.project.local
    - name: Cabal update
      run: cabal update
    - name: Install
      run: cabal install -j exe:reopt
    - name: Test
      run: cabal test -j reopt-tests
    - name: Create archive
      run: |
        mkdir -p dist/reopt/bin
        cp $HOME/.cabal/bin/reopt         dist/reopt/bin
        cp $HOME/.cabal/bin/reopt-explore dist/reopt/bin
        cp $HOME/.cabal/bin/reopt-relink  dist/reopt/bin
        cd dist
        tar cvfz reopt.tgz reopt
    - name: Make reopt
      uses: actions/upload-artifact@v2
      with:
        name: reopt
        path: dist/reopt.tgz
  # This builds the VSCode extension
  vscode-extension:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install npm
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y npm
    - name: Install vsce
      run: sudo npm install -g --no-optional vsce
    - name: Install dependencies
      working-directory: vscode-plugin
      run: npm install
    - name: Package extension
      working-directory: vscode-plugin
      run: |
        vsce package
        mv reopt-0.0.1.vsix reopt.vsix
    - name: Upload extension artifact
      uses: actions/upload-artifact@v2
      with:
        name: vscode-extension
        path: vscode-plugin/reopt.vsix
  reopt-vcg:
    runs-on: ubuntu-20.04
    steps:
    - name: Get reopt
      uses: actions/checkout@v2
    - name: Dependencies
      run: sudo apt-get install -y --no-install-recommends llvm-8 llvm-8-dev clang-8
    - name: Clone reopt-vcg
      run: |
        sed -i -e 's|git@github.com:|https://github.com/|' .gitmodules
        git submodule update --init --depth 1 deps/reopt-vcg
        cd deps/reopt-vcg
        sed -i -e 's|git@github.com:|https://github.com/|' .gitmodules
        git submodule update --init --depth 1
    - name: Build
      working-directory: deps/reopt-vcg
      run: ./build.sh
    - name: Test
      working-directory: deps/reopt-vcg
      run: .github/ci.sh run-tests
    - name: Create archive
      run: |
        mkdir -p dist/reopt-vcg/bin
        cp deps/reopt-vcg/build/bin/reopt-vcg dist/reopt-vcg/bin/reopt-vcg
        cp deps/reopt-vcg/deps/cvc4-2020-09-16-x86_64-linux-opt dist/reopt-vcg/bin/cvc4
        cd dist
        tar cvfz reopt-vcg.tgz reopt-vcg
    - name: Make reopt-vcg
      uses: actions/upload-artifact@v2
      with:
        name: reopt-vcg
        path: dist/reopt-vcg.tgz
  upload:
    needs: [build, vscode-extension, reopt-vcg]
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Download reopt artifact
      uses: actions/download-artifact@v2
      with:
        name: reopt
        path: dist
    - name: Download reopt-vcg artifact
      uses: actions/download-artifact@v2
      with:
        name: reopt-vcg
        path: dist
    - name: Copy files
      run: |
        cd containers/eval
        tar xvfz ../../dist/reopt.tgz
        tar xvfz ../../dist/reopt-vcg.tgz
    - name: Download extension artifact
      uses: actions/download-artifact@v2
      with:
        name: vscode-extension
        path: containers/eval
    - name: Build docker image
      run: |
        docker build -t galoisbinaryanalysis/reopt:head containers/eval
    - name: Push to Docker hub
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      run: |
        echo ${{ secrets.docker_password }} | docker login -u galoisbinaryanalysisbot --password-stdin
        docker push galoisbinaryanalysis/reopt:head
