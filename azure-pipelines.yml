trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - script: |
      # Changes ssh paths into http path for a read-only clone of
      # submodules without ssh keys.
      sed -i 's/git@github.com:/https:\/\/github.com\//' .gitmodules
      git submodule update --init
      # Save submodules list for caching
      git submodule | awk '{print $1,$2}' > submodule_list
    displayName: Checkout submodules
  - script: |
      # Download and unpack the stack executable to a path location
      mkdir -p $HOME/.local/bin
      export PATH=$HOME/.local/bin:$PATH
      curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C $HOME/.local/bin '*/stack'
    displayName: Download stack
  - task: Cache@2
    inputs:
      key: '"Dependencies" | stack.yaml | submodule_list'
      path: cache
      cacheHitVar: CACHE_RESTORED
    displayName: Cache dependencies
  - script: |
      # Download GHC  and other dependendencies
      stack --no-terminal setup
      stack --no-terminal --only-dependencies
      mkdir -p cache
      cp -r $HOME/.stack-root cache/stack-root
      cp -r .stack-work cache cache/stack-work
    displayName: Build dependencies
    condition: ne(variables.CACHE_RESTORED, 'true')
  - script: |
      # Move cache to appropriate directories.
      mv cache/stack-root $HOME/.stack-root
      mv cache/stack-work .stack-work
    displayName: Copy cache
    condition: eq(variables.CACHE_RESTORED, 'true')
  - script: |
       find .
       echo "Show home"
       find $HOME
    displayName: Show dependencies
  - script: |
      stack build --no-terminal --ghc-options="-Wall -Werror"
    displayName: Build
  - script: |
      stack test --no-terminal --ghc-options="-Wall -Werror"
    displayName: Tests
  - script: |
       find .
       echo "Show home"
       find $HOME
    displayName: Show all artifacts